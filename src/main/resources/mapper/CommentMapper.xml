<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xjtlu.slip.mapper.CommentMapper">

    <resultMap id="BaseResultMap" type="Comment">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="topicId" column="topic_id" jdbcType="BIGINT"/>
            <result property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="BIGINT"/>
    </resultMap>

    <resultMap id="CommentAndUser" type="Comment">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="topicId" column="topic_id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="BIGINT"/>
        <collection property="user" ofType="com.xjtlu.slip.pojo.User">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
            <result property="phone" column="phone" />
            <result property="password" column="password" />
            <result property="email" column="email"/>
            <result property="avatar" column="avatar"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id,topic_id,user_id,
        content,create_time
    </sql>

    <select id="selectOneCommentAndUser" resultMap="CommentAndUser">
        select comment.id as id, topic_id, user_id, content, create_time, name, phone, password, email, avatar
        from comment
            left JOIN user
                   on comment.user_id = user.id
            ${ew.customSqlSegment}
    </select>

    <select id="selectCommentAndUserByTopicId" resultMap="CommentAndUser">
        select comment.id as id, topic_id, user_id, content, create_time, name, phone, password, email, avatar
        from comment, user
        where topic_id = #{id}
          and comment.user_id = user.id
        ORDER BY create_time ASC
    </select>

    <select id="selectLatestCommentEveryTopic" resultType="Comment">
        select t1.*
        from comment t1,
             (SELECT comment.topic_id as topic_id, max(comment.create_time) as create_time
              from comment
              GROUP BY comment.topic_id) t2
        where t1.topic_id = t2.topic_id and t1.create_time = t2.create_time
    </select>

</mapper>
